name: iOS Build

permissions:
  contents: write

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
    # 1. リポジトリをチェックアウト
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: true

    # 2. CocoaPods があればインストール
    - name: Install dependencies
      run: |
        if [ -f "MyiOSApp/Podfile" ]; then
          cd MyiOSApp
          pod install
        fi

    # 3. Provisioning Profile を復元
    - name: Decode and install provisioning profile
      run: |
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        echo "$MOBILEPROVISION" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/MyiOSApp.mobileprovision
      env:
        MOBILEPROVISION: ${{ secrets.MOBILEPROVISION }}

    # 4. 証明書を Keychain にインポート
    - name: Import certificate to keychain
      run: |
        echo "$CERTIFICATE" | base64 --decode > /tmp/certificate.p12
        security create-keychain -p "$CERTIFICATE_PASSWORD" build.keychain
        security import /tmp/certificate.p12 -k ~/Library/Keychains/build.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
        security list-keychains -s ~/Library/Keychains/build.keychain
        security default-keychain -s ~/Library/Keychains/build.keychain
        security unlock-keychain -p "$CERTIFICATE_PASSWORD" ~/Library/Keychains/build.keychain
        security set-key-partition-list -S apple-tool:,apple: -s -k "$CERTIFICATE_PASSWORD" ~/Library/Keychains/build.keychain
        security find-identity -v -p codesigning || true
      env:
        CERTIFICATE: ${{ secrets.CERTIFICATE }}
        CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}

    # 5. DerivedData をクリア
    - name: Clean DerivedData
      run: rm -rf ~/Library/Developer/Xcode/DerivedData/*

    # 6. Xcode でクリーン & アーカイブ（自動生成 Info.plist を使用）
    - name: Clean and build archive
      working-directory: MyiOSApp
      run: |
        set -ex
        # Clean
        xcodebuild clean \
          -project MyiOSApp.xcodeproj \
          -scheme MyiOSApp \
          -configuration Release
        # Archive with verbose loggingg
        xcodebuild archive \
        -project MyiOSApp.xcodeproj \
        -scheme MyiOSApp \
        -sdk iphoneos \
        -configuration Release \
        -archivePath $PWD/build/MyiOSApp.xcarchive \
        CODE_SIGN_STYLE=Manual \
        CODE_SIGN_IDENTITY="iPhone Distribution" \
        PROVISIONING_PROFILE_SPECIFIER="MyiOSApp_AdHoc_Profile" \
        DEVELOPMENT_TEAM="${{ secrets.TEAM_ID }}" \
        SKIP_INSTALL=YES \
        BUILD_LIBRARY_FOR_DISTRIBUTION=NO


    # 7. .ipa にエクスポート
    - name: Export IPA
      working-directory: MyiOSApp
      run: |
        set -ex
        xcodebuild -exportArchive \
          -archivePath $PWD/build/MyiOSApp.xcarchive \
          -exportOptionsPlist ExportOptions.plist \
          -exportPath $PWD/build \
          | xcpretty --color
        echo "Contents of build directory:"
        ls -al build || true

    # 8. .ipa を Artifact としてアップロード
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: MyiOSApp-ipa
        path: MyiOSApp/build/*.ipa

    # 9. Render 配布用 static/ にコピー
    - name: Prepare static directory
      run: |
        set -ex
        mkdir -p MyiOSApp/static
        cp MyiOSApp/build/*.ipa MyiOSApp/static/ || echo "No ipa to copy"
        if [ -f MyiOSApp/Manifest.plist ]; then
          cp MyiOSApp/Manifest.plist MyiOSApp/static/
        fi
        if [ -f MyiOSApp/index.html ]; then
          cp MyiOSApp/index.html MyiOSApp/static/
        fi

    # 10. static/ をコミット & Push（Render 自動デプロイ用）
    - name: Commit and push static files  
      env:
        GIT_AUTHOR_NAME: github-actions
        GIT_AUTHOR_EMAIL: github-actions@github.com
      run: |
        set -ex
        git config user.name "${GIT_AUTHOR_NAME}"
        git config user.email "${GIT_AUTHOR_EMAIL}"
        git add MyiOSApp/static || true
        git commit -m "Deploy ipa to static for Render (build $GITHUB_RUN_NUMBER) [skip ci]" || echo "No changes to commit"
        git push origin main || echo "Push failed (maybe permissions)"
